var _user$project$Main$abilities2 = {
	ctor: '::',
	_0: 'Strength',
	_1: {
		ctor: '::',
		_0: 'Dexerity',
		_1: {
			ctor: '::',
			_0: 'Stamina',
			_1: {
				ctor: '::',
				_0: 'Charisma',
				_1: {
					ctor: '::',
					_0: 'Manipulation',
					_1: {
						ctor: '::',
						_0: 'Appearance',
						_1: {
							ctor: '::',
							_0: 'Perception',
							_1: {
								ctor: '::',
								_0: 'Intelligence',
								_1: {
									ctor: '::',
									_0: 'Wit',
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _user$project$Main$abilities1 = {
	ctor: '::',
	_0: 'Archery',
	_1: {
		ctor: '::',
		_0: 'Athletics',
		_1: {
			ctor: '::',
			_0: 'Brawl',
			_1: {
				ctor: '::',
				_0: 'Bureaucracy',
				_1: {
					ctor: '::',
					_0: 'Craft',
					_1: {
						ctor: '::',
						_0: 'Dodge',
						_1: {
							ctor: '::',
							_0: 'Integrity',
							_1: {
								ctor: '::',
								_0: 'Investigation',
								_1: {
									ctor: '::',
									_0: 'Larceny',
									_1: {
										ctor: '::',
										_0: 'Linguistics',
										_1: {
											ctor: '::',
											_0: 'Lore',
											_1: {
												ctor: '::',
												_0: 'Martial Arts',
												_1: {
													ctor: '::',
													_0: 'Medicine',
													_1: {
														ctor: '::',
														_0: 'Melee',
														_1: {
															ctor: '::',
															_0: 'Occult',
															_1: {
																ctor: '::',
																_0: 'Performance',
																_1: {
																	ctor: '::',
																	_0: 'Presence',
																	_1: {
																		ctor: '::',
																		_0: 'Resistance',
																		_1: {
																			ctor: '::',
																			_0: 'Ride',
																			_1: {
																				ctor: '::',
																				_0: 'Sail',
																				_1: {
																					ctor: '::',
																					_0: 'Socialize',
																					_1: {
																						ctor: '::',
																						_0: 'Stealth',
																						_1: {
																							ctor: '::',
																							_0: 'Thrown',
																							_1: {
																								ctor: '::',
																								_0: 'Survival',
																								_1: {
																									ctor: '::',
																									_0: 'War',
																									_1: {ctor: '[]'}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _user$project$Main$castes = {
	ctor: '::',
	_0: 'Dawn',
	_1: {
		ctor: '::',
		_0: 'Zenith',
		_1: {
			ctor: '::',
			_0: 'Twilight',
			_1: {
				ctor: '::',
				_0: 'Night',
				_1: {
					ctor: '::',
					_0: 'Eclipse',
					_1: {ctor: '[]'}
				}
			}
		}
	}
};
var _user$project$Main$simpleSelect = function (str) {
	return A2(
		_elm_lang$html$Html$option,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$value(str),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(str),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$extend = F3(
	function (attr, val, playerAttrs) {
		return A3(_elm_lang$core$Dict$insert, attr, val, playerAttrs);
	});
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'EditPlayerInfo') {
			var _p1 = _p0._1;
			var newPlayerInfo = A3(
				_elm_lang$core$Dict$insert,
				_p0._0,
				(_elm_lang$core$Native_Utils.cmp(
					_elm_lang$core$String$length(_p1),
					0) > 0) ? _elm_lang$core$Maybe$Just(_p1) : _elm_lang$core$Maybe$Nothing,
				model.playerInfo);
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					model,
					{playerInfo: newPlayerInfo}),
				{ctor: '[]'});
		} else {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					model,
					{
						playerAttrs: A3(_user$project$Main$extend, _p0._0, _p0._1, model.playerAttrs)
					}),
				{ctor: '[]'});
		}
	});
var _user$project$Main$emptyPlayerAttrs = _elm_lang$core$Dict$fromList(
	A2(
		_elm_lang$core$List$map,
		function (str) {
			return {ctor: '_Tuple2', _0: str, _1: 1};
		},
		_user$project$Main$abilities2));
var _user$project$Main$emptyPlayerInfo = _elm_lang$core$Dict$fromList(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'Name', _1: _elm_lang$core$Maybe$Nothing},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'Player', _1: _elm_lang$core$Maybe$Nothing},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'Caste', _1: _elm_lang$core$Maybe$Nothing},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'Concept', _1: _elm_lang$core$Maybe$Nothing},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'Anima', _1: _elm_lang$core$Maybe$Nothing},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'Ability', _1: _elm_lang$core$Maybe$Nothing},
							_1: {ctor: '[]'}
						}
					}
				}
			}
		}
	});
var _user$project$Main$init = A2(
	_elm_lang$core$Platform_Cmd_ops['!'],
	{playerInfo: _user$project$Main$emptyPlayerInfo, playerAttrs: _user$project$Main$emptyPlayerAttrs},
	{ctor: '[]'});
var _user$project$Main$Model = F2(
	function (a, b) {
		return {playerInfo: a, playerAttrs: b};
	});
var _user$project$Main$EditPlayerAttrs = F2(
	function (a, b) {
		return {ctor: 'EditPlayerAttrs', _0: a, _1: b};
	});
var _user$project$Main$pointCircle = F3(
	function (attr, val, filled) {
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width('20'),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height('20'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(
							A2(_user$project$Main$EditPlayerAttrs, attr, val)),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$circle,
					{
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$cx('10'),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$cy('10'),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$r('8'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$stroke('black'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$strokeWidth('2'),
										_1: {
											ctor: '::',
											_0: filled ? _elm_lang$svg$Svg_Attributes$fill('black') : _elm_lang$svg$Svg_Attributes$fill('white'),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					},
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			});
	});
var _user$project$Main$ability2Selection = function (_p2) {
	var _p3 = _p2;
	var _p4 = _p3._0;
	var bools = A3(
		_elm_lang$core$List$map2,
		F2(
			function (ref, val) {
				return _elm_lang$core$Native_Utils.cmp(ref, val) > -1;
			}),
		A2(_elm_lang$core$List$repeat, 5, _p3._1),
		A2(_elm_lang$core$List$range, 1, 5));
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(
				A2(_elm_lang$core$Basics_ops['++'], _p4, ' ')),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					A3(
						_elm_lang$core$List$map2,
						_user$project$Main$pointCircle(_p4),
						A2(_elm_lang$core$List$range, 1, 5),
						bools)),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$ability2View = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		A2(
			_elm_lang$core$List$map,
			_user$project$Main$ability2Selection,
			_elm_lang$core$Dict$toList(model.playerAttrs)));
};
var _user$project$Main$EditPlayerInfo = F2(
	function (a, b) {
		return {ctor: 'EditPlayerInfo', _0: a, _1: b};
	});
var _user$project$Main$casteSelection = A2(
	_elm_lang$html$Html$select,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Events$onInput(
			_user$project$Main$EditPlayerInfo('Caste')),
		_1: {ctor: '[]'}
	},
	A2(_elm_lang$core$List$map, _user$project$Main$simpleSelect, _user$project$Main$castes));
var _user$project$Main$ability1Selection = A2(
	_elm_lang$html$Html$select,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Events$onInput(
			_user$project$Main$EditPlayerInfo('Ability')),
		_1: {ctor: '[]'}
	},
	A2(_elm_lang$core$List$map, _user$project$Main$simpleSelect, _user$project$Main$abilities1));
var _user$project$Main$playerInfoView = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$placeholder('Name'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onInput(
							_user$project$Main$EditPlayerInfo('Name')),
						_1: {ctor: '[]'}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$placeholder('Player'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onInput(
								_user$project$Main$EditPlayerInfo('Player')),
							_1: {ctor: '[]'}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$placeholder('Concept'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(
									_user$project$Main$EditPlayerInfo('Concept')),
								_1: {ctor: '[]'}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$input,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$placeholder('Anima'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onInput(
										_user$project$Main$EditPlayerInfo('Anima')),
									_1: {ctor: '[]'}
								}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: _user$project$Main$casteSelection,
							_1: {
								ctor: '::',
								_0: _user$project$Main$ability1Selection,
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		});
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _user$project$Main$playerInfoView(model),
			_1: {
				ctor: '::',
				_0: _user$project$Main$ability2View(model),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: _user$project$Main$init,
		view: _user$project$Main$view,
		update: _user$project$Main$update,
		subscriptions: function (_p5) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
